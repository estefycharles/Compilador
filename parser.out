Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CSQUAREBR
    DIFFERENT
    DO
    ELSE
    EQUAL
    EXP
    FOR
    GREATERTHAN
    GREATERTHANEQ
    IF
    INPUT
    LESSTHAN
    LESSTHANEQ
    OR
    OSQUAREBR
    OUTPUT
    WHILE

Grammar

Rule 0     S' -> begin
Rule 1     begin -> BEGIN OPAREN ID CPAREN bloque main end
Rule 2     main -> MAIN OPAREN CPAREN OBRACKET bloque CBRACKET
Rule 3     bloque -> declaracionVarAux estatutoAux
Rule 4     bloque -> estatutoAux
Rule 5     declaracionVarAux -> declaracionVar
Rule 6     declaracionVarAux -> declaracionVarAux declaracionVarAux
Rule 7     declaracionVar -> VAR vars
Rule 8     vars -> tipo var EOF
Rule 9     var -> ID
Rule 10    var -> ID COMMA var
Rule 11    tipo -> INT
Rule 12    tipo -> DEC
Rule 13    tipo -> STRING
Rule 14    tipo -> BOOL
Rule 15    estatutoAux -> estatuto
Rule 16    estatutoAux -> estatutoAux estatutoAux
Rule 17    estatuto -> asignacion
Rule 18    estatuto -> funcion
Rule 19    estatuto -> epsilon
Rule 20    funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
Rule 21    funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
Rule 22    return -> RETURN ID EOF
Rule 23    parametros -> tipo ID
Rule 24    parametros -> tipo ID COMMA parametros
Rule 25    parametros -> epsilon
Rule 26    asignacion -> ID ASSIGNMENT expresion EOF
Rule 27    expresion -> exp
Rule 28    exp -> termino
Rule 29    exp -> termino PLUS exp
Rule 30    exp -> termino MINUS exp
Rule 31    termino -> factor
Rule 32    termino -> factor MULTIPLY termino
Rule 33    termino -> factor DIVIDE termino
Rule 34    factor -> varCTE
Rule 35    factor -> OPAREN expresion CPAREN
Rule 36    factor -> PLUS varCTE
Rule 37    factor -> MINUS varCTE
Rule 38    varCTE -> ID
Rule 39    varCTE -> INT
Rule 40    varCTE -> DEC
Rule 41    varCTE -> STRING
Rule 42    varCTE -> BOOL
Rule 43    end -> END OPAREN ID CPAREN
Rule 44    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGNMENT           : 26
BEGIN                : 1
BOOL                 : 14 42
CBRACKET             : 2 20 21
COMMA                : 10 24
CPAREN               : 1 2 20 21 35 43
CSQUAREBR            : 
DEC                  : 12 40
DIFFERENT            : 
DIVIDE               : 33
DO                   : 
ELSE                 : 
END                  : 43
EOF                  : 8 22 26
EQUAL                : 
EXP                  : 
FOR                  : 
FX                   : 20 21
GREATERTHAN          : 
GREATERTHANEQ        : 
ID                   : 1 9 10 20 21 22 23 24 26 38 43
IF                   : 
INPUT                : 
INT                  : 11 39
LESSTHAN             : 
LESSTHANEQ           : 
MAIN                 : 2
MINUS                : 30 37
MULTIPLY             : 32
OBRACKET             : 2 20 21
OPAREN               : 1 2 20 21 35 43
OR                   : 
OSQUAREBR            : 
OUTPUT               : 
PLUS                 : 29 36
RETURN               : 22
STRING               : 13 41
VAR                  : 7
VOID                 : 20
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 17
begin                : 0
bloque               : 1 2 20 21
declaracionVar       : 5
declaracionVarAux    : 3 6 6
end                  : 1
epsilon              : 19 25
estatuto             : 15
estatutoAux          : 3 4 16 16
exp                  : 27 29 30
expresion            : 26 35
factor               : 31 32 33
funcion              : 18
main                 : 1
parametros           : 20 21 24
return               : 21
termino              : 28 29 30 32 33
tipo                 : 8 21 23 24
var                  : 8 10
varCTE               : 34 36 37
vars                 : 7

Parsing method: LALR

state 0

    (0) S' -> . begin
    (1) begin -> . BEGIN OPAREN ID CPAREN bloque main end

    BEGIN           shift and go to state 2

    begin                          shift and go to state 1

state 1

    (0) S' -> begin .



state 2

    (1) begin -> BEGIN . OPAREN ID CPAREN bloque main end

    OPAREN          shift and go to state 3


state 3

    (1) begin -> BEGIN OPAREN . ID CPAREN bloque main end

    ID              shift and go to state 4


state 4

    (1) begin -> BEGIN OPAREN ID . CPAREN bloque main end

    CPAREN          shift and go to state 5


state 5

    (1) begin -> BEGIN OPAREN ID CPAREN . bloque main end
    (3) bloque -> . declaracionVarAux estatutoAux
    (4) bloque -> . estatutoAux
    (5) declaracionVarAux -> . declaracionVar
    (6) declaracionVarAux -> . declaracionVarAux declaracionVarAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (7) declaracionVar -> . VAR vars
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VAR             shift and go to state 12
    ID              shift and go to state 6
    VOID            shift and go to state 16
    MAIN            reduce using rule 44 (epsilon -> .)
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]

    bloque                         shift and go to state 7
    declaracionVarAux              shift and go to state 8
    estatutoAux                    shift and go to state 9
    declaracionVar                 shift and go to state 10
    estatuto                       shift and go to state 11
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15
    tipo                           shift and go to state 17

state 6

    (26) asignacion -> ID . ASSIGNMENT expresion EOF

    ASSIGNMENT      shift and go to state 22


state 7

    (1) begin -> BEGIN OPAREN ID CPAREN bloque . main end
    (2) main -> . MAIN OPAREN CPAREN OBRACKET bloque CBRACKET

    MAIN            shift and go to state 24

    main                           shift and go to state 23

state 8

    (3) bloque -> declaracionVarAux . estatutoAux
    (6) declaracionVarAux -> declaracionVarAux . declaracionVarAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (5) declaracionVarAux -> . declaracionVar
    (6) declaracionVarAux -> . declaracionVarAux declaracionVarAux
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (7) declaracionVar -> . VAR vars
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VAR             shift and go to state 12
    ID              shift and go to state 6
    VOID            shift and go to state 16
    MAIN            reduce using rule 44 (epsilon -> .)
    CBRACKET        reduce using rule 44 (epsilon -> .)
    RETURN          reduce using rule 44 (epsilon -> .)
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]

    declaracionVarAux              shift and go to state 25
    estatutoAux                    shift and go to state 26
    estatuto                       shift and go to state 11
    declaracionVar                 shift and go to state 10
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15
    tipo                           shift and go to state 17

state 9

    (4) bloque -> estatutoAux .
    (16) estatutoAux -> estatutoAux . estatutoAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for MAIN resolved using rule 4 (bloque -> estatutoAux .)
  ! reduce/reduce conflict for CBRACKET resolved using rule 4 (bloque -> estatutoAux .)
  ! reduce/reduce conflict for RETURN resolved using rule 4 (bloque -> estatutoAux .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    MAIN            reduce using rule 4 (bloque -> estatutoAux .)
    CBRACKET        reduce using rule 4 (bloque -> estatutoAux .)
    RETURN          reduce using rule 4 (bloque -> estatutoAux .)
    ID              shift and go to state 6
    VOID            shift and go to state 16
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]
  ! MAIN            [ reduce using rule 44 (epsilon -> .) ]
  ! CBRACKET        [ reduce using rule 44 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 44 (epsilon -> .) ]

    estatutoAux                    shift and go to state 27
    estatuto                       shift and go to state 11
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15
    tipo                           shift and go to state 17

state 10

    (5) declaracionVarAux -> declaracionVar .

    VAR             reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    ID              reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    VOID            reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    INT             reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    DEC             reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    STRING          reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    BOOL            reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    MAIN            reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    CBRACKET        reduce using rule 5 (declaracionVarAux -> declaracionVar .)
    RETURN          reduce using rule 5 (declaracionVarAux -> declaracionVar .)


state 11

    (15) estatutoAux -> estatuto .

    ID              reduce using rule 15 (estatutoAux -> estatuto .)
    VOID            reduce using rule 15 (estatutoAux -> estatuto .)
    INT             reduce using rule 15 (estatutoAux -> estatuto .)
    DEC             reduce using rule 15 (estatutoAux -> estatuto .)
    STRING          reduce using rule 15 (estatutoAux -> estatuto .)
    BOOL            reduce using rule 15 (estatutoAux -> estatuto .)
    MAIN            reduce using rule 15 (estatutoAux -> estatuto .)
    CBRACKET        reduce using rule 15 (estatutoAux -> estatuto .)
    RETURN          reduce using rule 15 (estatutoAux -> estatuto .)


state 12

    (7) declaracionVar -> VAR . vars
    (8) vars -> . tipo var EOF
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    vars                           shift and go to state 28
    tipo                           shift and go to state 29

state 13

    (17) estatuto -> asignacion .

    ID              reduce using rule 17 (estatuto -> asignacion .)
    VOID            reduce using rule 17 (estatuto -> asignacion .)
    INT             reduce using rule 17 (estatuto -> asignacion .)
    DEC             reduce using rule 17 (estatuto -> asignacion .)
    STRING          reduce using rule 17 (estatuto -> asignacion .)
    BOOL            reduce using rule 17 (estatuto -> asignacion .)
    MAIN            reduce using rule 17 (estatuto -> asignacion .)
    CBRACKET        reduce using rule 17 (estatuto -> asignacion .)
    RETURN          reduce using rule 17 (estatuto -> asignacion .)


state 14

    (18) estatuto -> funcion .

    ID              reduce using rule 18 (estatuto -> funcion .)
    VOID            reduce using rule 18 (estatuto -> funcion .)
    INT             reduce using rule 18 (estatuto -> funcion .)
    DEC             reduce using rule 18 (estatuto -> funcion .)
    STRING          reduce using rule 18 (estatuto -> funcion .)
    BOOL            reduce using rule 18 (estatuto -> funcion .)
    MAIN            reduce using rule 18 (estatuto -> funcion .)
    CBRACKET        reduce using rule 18 (estatuto -> funcion .)
    RETURN          reduce using rule 18 (estatuto -> funcion .)


state 15

    (19) estatuto -> epsilon .

    ID              reduce using rule 19 (estatuto -> epsilon .)
    VOID            reduce using rule 19 (estatuto -> epsilon .)
    INT             reduce using rule 19 (estatuto -> epsilon .)
    DEC             reduce using rule 19 (estatuto -> epsilon .)
    STRING          reduce using rule 19 (estatuto -> epsilon .)
    BOOL            reduce using rule 19 (estatuto -> epsilon .)
    MAIN            reduce using rule 19 (estatuto -> epsilon .)
    CBRACKET        reduce using rule 19 (estatuto -> epsilon .)
    RETURN          reduce using rule 19 (estatuto -> epsilon .)


state 16

    (20) funcion -> VOID . FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET

    FX              shift and go to state 30


state 17

    (21) funcion -> tipo . FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET

    FX              shift and go to state 31


state 18

    (11) tipo -> INT .

    FX              reduce using rule 11 (tipo -> INT .)
    ID              reduce using rule 11 (tipo -> INT .)


state 19

    (12) tipo -> DEC .

    FX              reduce using rule 12 (tipo -> DEC .)
    ID              reduce using rule 12 (tipo -> DEC .)


state 20

    (13) tipo -> STRING .

    FX              reduce using rule 13 (tipo -> STRING .)
    ID              reduce using rule 13 (tipo -> STRING .)


state 21

    (14) tipo -> BOOL .

    FX              reduce using rule 14 (tipo -> BOOL .)
    ID              reduce using rule 14 (tipo -> BOOL .)


state 22

    (26) asignacion -> ID ASSIGNMENT . expresion EOF
    (27) expresion -> . exp
    (28) exp -> . termino
    (29) exp -> . termino PLUS exp
    (30) exp -> . termino MINUS exp
    (31) termino -> . factor
    (32) termino -> . factor MULTIPLY termino
    (33) termino -> . factor DIVIDE termino
    (34) factor -> . varCTE
    (35) factor -> . OPAREN expresion CPAREN
    (36) factor -> . PLUS varCTE
    (37) factor -> . MINUS varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    OPAREN          shift and go to state 40
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    expresion                      shift and go to state 33
    exp                            shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 38
    varCTE                         shift and go to state 39

state 23

    (1) begin -> BEGIN OPAREN ID CPAREN bloque main . end
    (43) end -> . END OPAREN ID CPAREN

    END             shift and go to state 46

    end                            shift and go to state 45

state 24

    (2) main -> MAIN . OPAREN CPAREN OBRACKET bloque CBRACKET

    OPAREN          shift and go to state 47


state 25

    (6) declaracionVarAux -> declaracionVarAux declaracionVarAux .
    (6) declaracionVarAux -> declaracionVarAux . declaracionVarAux
    (5) declaracionVarAux -> . declaracionVar
    (6) declaracionVarAux -> . declaracionVarAux declaracionVarAux
    (7) declaracionVar -> . VAR vars

  ! shift/reduce conflict for VAR resolved as shift
    ID              reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    VOID            reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    INT             reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    DEC             reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    STRING          reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    BOOL            reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    MAIN            reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    CBRACKET        reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    RETURN          reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .)
    VAR             shift and go to state 12

  ! VAR             [ reduce using rule 6 (declaracionVarAux -> declaracionVarAux declaracionVarAux .) ]

    declaracionVarAux              shift and go to state 25
    declaracionVar                 shift and go to state 10

state 26

    (3) bloque -> declaracionVarAux estatutoAux .
    (16) estatutoAux -> estatutoAux . estatutoAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for MAIN resolved using rule 3 (bloque -> declaracionVarAux estatutoAux .)
  ! reduce/reduce conflict for CBRACKET resolved using rule 3 (bloque -> declaracionVarAux estatutoAux .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (bloque -> declaracionVarAux estatutoAux .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    MAIN            reduce using rule 3 (bloque -> declaracionVarAux estatutoAux .)
    CBRACKET        reduce using rule 3 (bloque -> declaracionVarAux estatutoAux .)
    RETURN          reduce using rule 3 (bloque -> declaracionVarAux estatutoAux .)
    ID              shift and go to state 6
    VOID            shift and go to state 16
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]
  ! MAIN            [ reduce using rule 44 (epsilon -> .) ]
  ! CBRACKET        [ reduce using rule 44 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 44 (epsilon -> .) ]

    estatutoAux                    shift and go to state 27
    estatuto                       shift and go to state 11
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15
    tipo                           shift and go to state 17

state 27

    (16) estatutoAux -> estatutoAux estatutoAux .
    (16) estatutoAux -> estatutoAux . estatutoAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
  ! reduce/reduce conflict for DEC resolved using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
  ! reduce/reduce conflict for STRING resolved using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
  ! reduce/reduce conflict for BOOL resolved using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
  ! reduce/reduce conflict for MAIN resolved using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
  ! reduce/reduce conflict for CBRACKET resolved using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
  ! reduce/reduce conflict for RETURN resolved using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    MAIN            reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
    CBRACKET        reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
    RETURN          reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .)
    ID              shift and go to state 6
    VOID            shift and go to state 16
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .) ]
  ! VOID            [ reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .) ]
  ! INT             [ reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .) ]
  ! DEC             [ reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .) ]
  ! STRING          [ reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .) ]
  ! BOOL            [ reduce using rule 16 (estatutoAux -> estatutoAux estatutoAux .) ]
  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]
  ! MAIN            [ reduce using rule 44 (epsilon -> .) ]
  ! CBRACKET        [ reduce using rule 44 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 44 (epsilon -> .) ]

    estatutoAux                    shift and go to state 27
    estatuto                       shift and go to state 11
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15
    tipo                           shift and go to state 17

state 28

    (7) declaracionVar -> VAR vars .

    VAR             reduce using rule 7 (declaracionVar -> VAR vars .)
    ID              reduce using rule 7 (declaracionVar -> VAR vars .)
    VOID            reduce using rule 7 (declaracionVar -> VAR vars .)
    INT             reduce using rule 7 (declaracionVar -> VAR vars .)
    DEC             reduce using rule 7 (declaracionVar -> VAR vars .)
    STRING          reduce using rule 7 (declaracionVar -> VAR vars .)
    BOOL            reduce using rule 7 (declaracionVar -> VAR vars .)
    MAIN            reduce using rule 7 (declaracionVar -> VAR vars .)
    CBRACKET        reduce using rule 7 (declaracionVar -> VAR vars .)
    RETURN          reduce using rule 7 (declaracionVar -> VAR vars .)


state 29

    (8) vars -> tipo . var EOF
    (9) var -> . ID
    (10) var -> . ID COMMA var

    ID              shift and go to state 49

    var                            shift and go to state 48

state 30

    (20) funcion -> VOID FX . ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET

    ID              shift and go to state 50


state 31

    (21) funcion -> tipo FX . ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET

    ID              shift and go to state 51


state 32

    (38) varCTE -> ID .

    MULTIPLY        reduce using rule 38 (varCTE -> ID .)
    DIVIDE          reduce using rule 38 (varCTE -> ID .)
    PLUS            reduce using rule 38 (varCTE -> ID .)
    MINUS           reduce using rule 38 (varCTE -> ID .)
    EOF             reduce using rule 38 (varCTE -> ID .)
    CPAREN          reduce using rule 38 (varCTE -> ID .)


state 33

    (26) asignacion -> ID ASSIGNMENT expresion . EOF

    EOF             shift and go to state 52


state 34

    (27) expresion -> exp .

    EOF             reduce using rule 27 (expresion -> exp .)
    CPAREN          reduce using rule 27 (expresion -> exp .)


state 35

    (28) exp -> termino .
    (29) exp -> termino . PLUS exp
    (30) exp -> termino . MINUS exp

    EOF             reduce using rule 28 (exp -> termino .)
    CPAREN          reduce using rule 28 (exp -> termino .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54


state 36

    (36) factor -> PLUS . varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    varCTE                         shift and go to state 55

state 37

    (37) factor -> MINUS . varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    varCTE                         shift and go to state 56

state 38

    (31) termino -> factor .
    (32) termino -> factor . MULTIPLY termino
    (33) termino -> factor . DIVIDE termino

    PLUS            reduce using rule 31 (termino -> factor .)
    MINUS           reduce using rule 31 (termino -> factor .)
    EOF             reduce using rule 31 (termino -> factor .)
    CPAREN          reduce using rule 31 (termino -> factor .)
    MULTIPLY        shift and go to state 57
    DIVIDE          shift and go to state 58


state 39

    (34) factor -> varCTE .

    MULTIPLY        reduce using rule 34 (factor -> varCTE .)
    DIVIDE          reduce using rule 34 (factor -> varCTE .)
    PLUS            reduce using rule 34 (factor -> varCTE .)
    MINUS           reduce using rule 34 (factor -> varCTE .)
    EOF             reduce using rule 34 (factor -> varCTE .)
    CPAREN          reduce using rule 34 (factor -> varCTE .)


state 40

    (35) factor -> OPAREN . expresion CPAREN
    (27) expresion -> . exp
    (28) exp -> . termino
    (29) exp -> . termino PLUS exp
    (30) exp -> . termino MINUS exp
    (31) termino -> . factor
    (32) termino -> . factor MULTIPLY termino
    (33) termino -> . factor DIVIDE termino
    (34) factor -> . varCTE
    (35) factor -> . OPAREN expresion CPAREN
    (36) factor -> . PLUS varCTE
    (37) factor -> . MINUS varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    OPAREN          shift and go to state 40
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    expresion                      shift and go to state 59
    exp                            shift and go to state 34
    termino                        shift and go to state 35
    factor                         shift and go to state 38
    varCTE                         shift and go to state 39

state 41

    (39) varCTE -> INT .

    MULTIPLY        reduce using rule 39 (varCTE -> INT .)
    DIVIDE          reduce using rule 39 (varCTE -> INT .)
    PLUS            reduce using rule 39 (varCTE -> INT .)
    MINUS           reduce using rule 39 (varCTE -> INT .)
    EOF             reduce using rule 39 (varCTE -> INT .)
    CPAREN          reduce using rule 39 (varCTE -> INT .)


state 42

    (40) varCTE -> DEC .

    MULTIPLY        reduce using rule 40 (varCTE -> DEC .)
    DIVIDE          reduce using rule 40 (varCTE -> DEC .)
    PLUS            reduce using rule 40 (varCTE -> DEC .)
    MINUS           reduce using rule 40 (varCTE -> DEC .)
    EOF             reduce using rule 40 (varCTE -> DEC .)
    CPAREN          reduce using rule 40 (varCTE -> DEC .)


state 43

    (41) varCTE -> STRING .

    MULTIPLY        reduce using rule 41 (varCTE -> STRING .)
    DIVIDE          reduce using rule 41 (varCTE -> STRING .)
    PLUS            reduce using rule 41 (varCTE -> STRING .)
    MINUS           reduce using rule 41 (varCTE -> STRING .)
    EOF             reduce using rule 41 (varCTE -> STRING .)
    CPAREN          reduce using rule 41 (varCTE -> STRING .)


state 44

    (42) varCTE -> BOOL .

    MULTIPLY        reduce using rule 42 (varCTE -> BOOL .)
    DIVIDE          reduce using rule 42 (varCTE -> BOOL .)
    PLUS            reduce using rule 42 (varCTE -> BOOL .)
    MINUS           reduce using rule 42 (varCTE -> BOOL .)
    EOF             reduce using rule 42 (varCTE -> BOOL .)
    CPAREN          reduce using rule 42 (varCTE -> BOOL .)


state 45

    (1) begin -> BEGIN OPAREN ID CPAREN bloque main end .

    $end            reduce using rule 1 (begin -> BEGIN OPAREN ID CPAREN bloque main end .)


state 46

    (43) end -> END . OPAREN ID CPAREN

    OPAREN          shift and go to state 60


state 47

    (2) main -> MAIN OPAREN . CPAREN OBRACKET bloque CBRACKET

    CPAREN          shift and go to state 61


state 48

    (8) vars -> tipo var . EOF

    EOF             shift and go to state 62


state 49

    (9) var -> ID .
    (10) var -> ID . COMMA var

    EOF             reduce using rule 9 (var -> ID .)
    COMMA           shift and go to state 63


state 50

    (20) funcion -> VOID FX ID . OPAREN parametros CPAREN OBRACKET bloque CBRACKET

    OPAREN          shift and go to state 64


state 51

    (21) funcion -> tipo FX ID . OPAREN parametros CPAREN OBRACKET bloque return CBRACKET

    OPAREN          shift and go to state 65


state 52

    (26) asignacion -> ID ASSIGNMENT expresion EOF .

    ID              reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    VOID            reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    INT             reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    DEC             reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    STRING          reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    BOOL            reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    MAIN            reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    CBRACKET        reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)
    RETURN          reduce using rule 26 (asignacion -> ID ASSIGNMENT expresion EOF .)


state 53

    (29) exp -> termino PLUS . exp
    (28) exp -> . termino
    (29) exp -> . termino PLUS exp
    (30) exp -> . termino MINUS exp
    (31) termino -> . factor
    (32) termino -> . factor MULTIPLY termino
    (33) termino -> . factor DIVIDE termino
    (34) factor -> . varCTE
    (35) factor -> . OPAREN expresion CPAREN
    (36) factor -> . PLUS varCTE
    (37) factor -> . MINUS varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    OPAREN          shift and go to state 40
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    termino                        shift and go to state 35
    exp                            shift and go to state 66
    factor                         shift and go to state 38
    varCTE                         shift and go to state 39

state 54

    (30) exp -> termino MINUS . exp
    (28) exp -> . termino
    (29) exp -> . termino PLUS exp
    (30) exp -> . termino MINUS exp
    (31) termino -> . factor
    (32) termino -> . factor MULTIPLY termino
    (33) termino -> . factor DIVIDE termino
    (34) factor -> . varCTE
    (35) factor -> . OPAREN expresion CPAREN
    (36) factor -> . PLUS varCTE
    (37) factor -> . MINUS varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    OPAREN          shift and go to state 40
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    termino                        shift and go to state 35
    exp                            shift and go to state 67
    factor                         shift and go to state 38
    varCTE                         shift and go to state 39

state 55

    (36) factor -> PLUS varCTE .

    MULTIPLY        reduce using rule 36 (factor -> PLUS varCTE .)
    DIVIDE          reduce using rule 36 (factor -> PLUS varCTE .)
    PLUS            reduce using rule 36 (factor -> PLUS varCTE .)
    MINUS           reduce using rule 36 (factor -> PLUS varCTE .)
    EOF             reduce using rule 36 (factor -> PLUS varCTE .)
    CPAREN          reduce using rule 36 (factor -> PLUS varCTE .)


state 56

    (37) factor -> MINUS varCTE .

    MULTIPLY        reduce using rule 37 (factor -> MINUS varCTE .)
    DIVIDE          reduce using rule 37 (factor -> MINUS varCTE .)
    PLUS            reduce using rule 37 (factor -> MINUS varCTE .)
    MINUS           reduce using rule 37 (factor -> MINUS varCTE .)
    EOF             reduce using rule 37 (factor -> MINUS varCTE .)
    CPAREN          reduce using rule 37 (factor -> MINUS varCTE .)


state 57

    (32) termino -> factor MULTIPLY . termino
    (31) termino -> . factor
    (32) termino -> . factor MULTIPLY termino
    (33) termino -> . factor DIVIDE termino
    (34) factor -> . varCTE
    (35) factor -> . OPAREN expresion CPAREN
    (36) factor -> . PLUS varCTE
    (37) factor -> . MINUS varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    OPAREN          shift and go to state 40
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    factor                         shift and go to state 38
    termino                        shift and go to state 68
    varCTE                         shift and go to state 39

state 58

    (33) termino -> factor DIVIDE . termino
    (31) termino -> . factor
    (32) termino -> . factor MULTIPLY termino
    (33) termino -> . factor DIVIDE termino
    (34) factor -> . varCTE
    (35) factor -> . OPAREN expresion CPAREN
    (36) factor -> . PLUS varCTE
    (37) factor -> . MINUS varCTE
    (38) varCTE -> . ID
    (39) varCTE -> . INT
    (40) varCTE -> . DEC
    (41) varCTE -> . STRING
    (42) varCTE -> . BOOL

    OPAREN          shift and go to state 40
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    INT             shift and go to state 41
    DEC             shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 44

    factor                         shift and go to state 38
    termino                        shift and go to state 69
    varCTE                         shift and go to state 39

state 59

    (35) factor -> OPAREN expresion . CPAREN

    CPAREN          shift and go to state 70


state 60

    (43) end -> END OPAREN . ID CPAREN

    ID              shift and go to state 71


state 61

    (2) main -> MAIN OPAREN CPAREN . OBRACKET bloque CBRACKET

    OBRACKET        shift and go to state 72


state 62

    (8) vars -> tipo var EOF .

    VAR             reduce using rule 8 (vars -> tipo var EOF .)
    ID              reduce using rule 8 (vars -> tipo var EOF .)
    VOID            reduce using rule 8 (vars -> tipo var EOF .)
    INT             reduce using rule 8 (vars -> tipo var EOF .)
    DEC             reduce using rule 8 (vars -> tipo var EOF .)
    STRING          reduce using rule 8 (vars -> tipo var EOF .)
    BOOL            reduce using rule 8 (vars -> tipo var EOF .)
    MAIN            reduce using rule 8 (vars -> tipo var EOF .)
    CBRACKET        reduce using rule 8 (vars -> tipo var EOF .)
    RETURN          reduce using rule 8 (vars -> tipo var EOF .)


state 63

    (10) var -> ID COMMA . var
    (9) var -> . ID
    (10) var -> . ID COMMA var

    ID              shift and go to state 49

    var                            shift and go to state 73

state 64

    (20) funcion -> VOID FX ID OPAREN . parametros CPAREN OBRACKET bloque CBRACKET
    (23) parametros -> . tipo ID
    (24) parametros -> . tipo ID COMMA parametros
    (25) parametros -> . epsilon
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL
    (44) epsilon -> .

    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    CPAREN          reduce using rule 44 (epsilon -> .)

    parametros                     shift and go to state 74
    tipo                           shift and go to state 75
    epsilon                        shift and go to state 76

state 65

    (21) funcion -> tipo FX ID OPAREN . parametros CPAREN OBRACKET bloque return CBRACKET
    (23) parametros -> . tipo ID
    (24) parametros -> . tipo ID COMMA parametros
    (25) parametros -> . epsilon
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL
    (44) epsilon -> .

    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    CPAREN          reduce using rule 44 (epsilon -> .)

    tipo                           shift and go to state 75
    parametros                     shift and go to state 77
    epsilon                        shift and go to state 76

state 66

    (29) exp -> termino PLUS exp .

    EOF             reduce using rule 29 (exp -> termino PLUS exp .)
    CPAREN          reduce using rule 29 (exp -> termino PLUS exp .)


state 67

    (30) exp -> termino MINUS exp .

    EOF             reduce using rule 30 (exp -> termino MINUS exp .)
    CPAREN          reduce using rule 30 (exp -> termino MINUS exp .)


state 68

    (32) termino -> factor MULTIPLY termino .

    PLUS            reduce using rule 32 (termino -> factor MULTIPLY termino .)
    MINUS           reduce using rule 32 (termino -> factor MULTIPLY termino .)
    EOF             reduce using rule 32 (termino -> factor MULTIPLY termino .)
    CPAREN          reduce using rule 32 (termino -> factor MULTIPLY termino .)


state 69

    (33) termino -> factor DIVIDE termino .

    PLUS            reduce using rule 33 (termino -> factor DIVIDE termino .)
    MINUS           reduce using rule 33 (termino -> factor DIVIDE termino .)
    EOF             reduce using rule 33 (termino -> factor DIVIDE termino .)
    CPAREN          reduce using rule 33 (termino -> factor DIVIDE termino .)


state 70

    (35) factor -> OPAREN expresion CPAREN .

    MULTIPLY        reduce using rule 35 (factor -> OPAREN expresion CPAREN .)
    DIVIDE          reduce using rule 35 (factor -> OPAREN expresion CPAREN .)
    PLUS            reduce using rule 35 (factor -> OPAREN expresion CPAREN .)
    MINUS           reduce using rule 35 (factor -> OPAREN expresion CPAREN .)
    EOF             reduce using rule 35 (factor -> OPAREN expresion CPAREN .)
    CPAREN          reduce using rule 35 (factor -> OPAREN expresion CPAREN .)


state 71

    (43) end -> END OPAREN ID . CPAREN

    CPAREN          shift and go to state 78


state 72

    (2) main -> MAIN OPAREN CPAREN OBRACKET . bloque CBRACKET
    (3) bloque -> . declaracionVarAux estatutoAux
    (4) bloque -> . estatutoAux
    (5) declaracionVarAux -> . declaracionVar
    (6) declaracionVarAux -> . declaracionVarAux declaracionVarAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (7) declaracionVar -> . VAR vars
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VAR             shift and go to state 12
    ID              shift and go to state 6
    VOID            shift and go to state 16
    CBRACKET        reduce using rule 44 (epsilon -> .)
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]

    bloque                         shift and go to state 79
    declaracionVarAux              shift and go to state 8
    estatutoAux                    shift and go to state 9
    declaracionVar                 shift and go to state 10
    estatuto                       shift and go to state 11
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15
    tipo                           shift and go to state 17

state 73

    (10) var -> ID COMMA var .

    EOF             reduce using rule 10 (var -> ID COMMA var .)


state 74

    (20) funcion -> VOID FX ID OPAREN parametros . CPAREN OBRACKET bloque CBRACKET

    CPAREN          shift and go to state 80


state 75

    (23) parametros -> tipo . ID
    (24) parametros -> tipo . ID COMMA parametros

    ID              shift and go to state 81


state 76

    (25) parametros -> epsilon .

    CPAREN          reduce using rule 25 (parametros -> epsilon .)


state 77

    (21) funcion -> tipo FX ID OPAREN parametros . CPAREN OBRACKET bloque return CBRACKET

    CPAREN          shift and go to state 82


state 78

    (43) end -> END OPAREN ID CPAREN .

    $end            reduce using rule 43 (end -> END OPAREN ID CPAREN .)


state 79

    (2) main -> MAIN OPAREN CPAREN OBRACKET bloque . CBRACKET

    CBRACKET        shift and go to state 83


state 80

    (20) funcion -> VOID FX ID OPAREN parametros CPAREN . OBRACKET bloque CBRACKET

    OBRACKET        shift and go to state 84


state 81

    (23) parametros -> tipo ID .
    (24) parametros -> tipo ID . COMMA parametros

    CPAREN          reduce using rule 23 (parametros -> tipo ID .)
    COMMA           shift and go to state 85


state 82

    (21) funcion -> tipo FX ID OPAREN parametros CPAREN . OBRACKET bloque return CBRACKET

    OBRACKET        shift and go to state 86


state 83

    (2) main -> MAIN OPAREN CPAREN OBRACKET bloque CBRACKET .

    END             reduce using rule 2 (main -> MAIN OPAREN CPAREN OBRACKET bloque CBRACKET .)


state 84

    (20) funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET . bloque CBRACKET
    (3) bloque -> . declaracionVarAux estatutoAux
    (4) bloque -> . estatutoAux
    (5) declaracionVarAux -> . declaracionVar
    (6) declaracionVarAux -> . declaracionVarAux declaracionVarAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (7) declaracionVar -> . VAR vars
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VAR             shift and go to state 12
    ID              shift and go to state 6
    VOID            shift and go to state 16
    CBRACKET        reduce using rule 44 (epsilon -> .)
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]

    bloque                         shift and go to state 87
    declaracionVarAux              shift and go to state 8
    estatutoAux                    shift and go to state 9
    declaracionVar                 shift and go to state 10
    estatuto                       shift and go to state 11
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15
    tipo                           shift and go to state 17

state 85

    (24) parametros -> tipo ID COMMA . parametros
    (23) parametros -> . tipo ID
    (24) parametros -> . tipo ID COMMA parametros
    (25) parametros -> . epsilon
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL
    (44) epsilon -> .

    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    CPAREN          reduce using rule 44 (epsilon -> .)

    tipo                           shift and go to state 75
    parametros                     shift and go to state 88
    epsilon                        shift and go to state 76

state 86

    (21) funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET . bloque return CBRACKET
    (3) bloque -> . declaracionVarAux estatutoAux
    (4) bloque -> . estatutoAux
    (5) declaracionVarAux -> . declaracionVar
    (6) declaracionVarAux -> . declaracionVarAux declaracionVarAux
    (15) estatutoAux -> . estatuto
    (16) estatutoAux -> . estatutoAux estatutoAux
    (7) declaracionVar -> . VAR vars
    (17) estatuto -> . asignacion
    (18) estatuto -> . funcion
    (19) estatuto -> . epsilon
    (26) asignacion -> . ID ASSIGNMENT expresion EOF
    (20) funcion -> . VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET
    (21) funcion -> . tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET
    (44) epsilon -> .
    (11) tipo -> . INT
    (12) tipo -> . DEC
    (13) tipo -> . STRING
    (14) tipo -> . BOOL

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VAR             shift and go to state 12
    ID              shift and go to state 6
    VOID            shift and go to state 16
    RETURN          reduce using rule 44 (epsilon -> .)
    INT             shift and go to state 18
    DEC             shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

  ! ID              [ reduce using rule 44 (epsilon -> .) ]
  ! VOID            [ reduce using rule 44 (epsilon -> .) ]
  ! INT             [ reduce using rule 44 (epsilon -> .) ]
  ! DEC             [ reduce using rule 44 (epsilon -> .) ]
  ! STRING          [ reduce using rule 44 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 44 (epsilon -> .) ]

    tipo                           shift and go to state 17
    bloque                         shift and go to state 89
    declaracionVarAux              shift and go to state 8
    estatutoAux                    shift and go to state 9
    declaracionVar                 shift and go to state 10
    estatuto                       shift and go to state 11
    asignacion                     shift and go to state 13
    funcion                        shift and go to state 14
    epsilon                        shift and go to state 15

state 87

    (20) funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque . CBRACKET

    CBRACKET        shift and go to state 90


state 88

    (24) parametros -> tipo ID COMMA parametros .

    CPAREN          reduce using rule 24 (parametros -> tipo ID COMMA parametros .)


state 89

    (21) funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque . return CBRACKET
    (22) return -> . RETURN ID EOF

    RETURN          shift and go to state 92

    return                         shift and go to state 91

state 90

    (20) funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .

    ID              reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    VOID            reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    INT             reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    DEC             reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    STRING          reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    BOOL            reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    MAIN            reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    CBRACKET        reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)
    RETURN          reduce using rule 20 (funcion -> VOID FX ID OPAREN parametros CPAREN OBRACKET bloque CBRACKET .)


state 91

    (21) funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return . CBRACKET

    CBRACKET        shift and go to state 93


state 92

    (22) return -> RETURN . ID EOF

    ID              shift and go to state 94


state 93

    (21) funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .

    ID              reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    VOID            reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    INT             reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    DEC             reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    STRING          reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    BOOL            reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    MAIN            reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    CBRACKET        reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)
    RETURN          reduce using rule 21 (funcion -> tipo FX ID OPAREN parametros CPAREN OBRACKET bloque return CBRACKET .)


state 94

    (22) return -> RETURN ID . EOF

    EOF             shift and go to state 95


state 95

    (22) return -> RETURN ID EOF .

    CBRACKET        reduce using rule 22 (return -> RETURN ID EOF .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for VOID in state 5 resolved as shift
WARNING: shift/reduce conflict for INT in state 5 resolved as shift
WARNING: shift/reduce conflict for DEC in state 5 resolved as shift
WARNING: shift/reduce conflict for STRING in state 5 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for VOID in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DEC in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for VOID in state 9 resolved as shift
WARNING: shift/reduce conflict for INT in state 9 resolved as shift
WARNING: shift/reduce conflict for DEC in state 9 resolved as shift
WARNING: shift/reduce conflict for STRING in state 9 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 9 resolved as shift
WARNING: shift/reduce conflict for VAR in state 25 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for VOID in state 26 resolved as shift
WARNING: shift/reduce conflict for INT in state 26 resolved as shift
WARNING: shift/reduce conflict for DEC in state 26 resolved as shift
WARNING: shift/reduce conflict for STRING in state 26 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for VOID in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for VOID in state 27 resolved as shift
WARNING: shift/reduce conflict for INT in state 27 resolved as shift
WARNING: shift/reduce conflict for DEC in state 27 resolved as shift
WARNING: shift/reduce conflict for STRING in state 27 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for VOID in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DEC in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for VOID in state 84 resolved as shift
WARNING: shift/reduce conflict for INT in state 84 resolved as shift
WARNING: shift/reduce conflict for DEC in state 84 resolved as shift
WARNING: shift/reduce conflict for STRING in state 84 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for VOID in state 86 resolved as shift
WARNING: shift/reduce conflict for INT in state 86 resolved as shift
WARNING: shift/reduce conflict for DEC in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING in state 86 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 86 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (bloque -> estatutoAux)
WARNING: rejected rule (epsilon -> <empty>) in state 9
WARNING: reduce/reduce conflict in state 26 resolved using rule (bloque -> declaracionVarAux estatutoAux)
WARNING: rejected rule (epsilon -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (estatutoAux -> estatutoAux estatutoAux)
WARNING: rejected rule (epsilon -> <empty>) in state 27
