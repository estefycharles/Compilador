
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGNMENT BEGIN BOOL CBRACKET COMMA CPAREN CSQUAREBR DEC DIFFERENT DIVIDE DO ELSE END EOF EQUAL EXP FOR FX GREATERTHAN GREATERTHANEQ ID IF INPUT INT LESSTHAN LESSTHANEQ MINUS MULTIPLY OBRACKET OPAREN OR OSQUAREBR OUTPUT PLUS RETURN STRING VAR VOID WHILE begin : BEGIN OPAREN ID CPAREN bloque  bloque : declaracionVar estatuto declaracionVar : VAR vars  vars : tipo var EOF  var : ID\n            | ID COMMA var  tipo : INT\n            | DEC\n            | STRING\n            | BOOL  asignacion : ID ASSIGNMENT expresion EOF expresion : exp  exp : termino \n            | termino PLUS exp\n            | termino MINUS exp  termino : factor\n                | factor MULTIPLY termino\n                | factor DIVIDE termino  factor : varCTE\n                | OPAREN expresion CPAREN\n                | PLUS varCTE\n                | MINUS varCTE varCTE : ID\n                | INT\n                | DEC\n                | STRING\n                | BOOL  estatuto : asignacion\n                | epsilon  epsilon : '
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,6,7,9,10,11,13,35,37,],[0,-1,-30,-2,-28,-29,-3,-4,-11,]),'OPAREN':([2,19,30,38,39,42,43,],[3,30,30,30,30,30,30,]),'ID':([3,7,13,14,15,16,17,18,19,26,27,30,35,36,38,39,42,43,],[4,12,-3,21,-7,-8,-9,-10,22,22,22,22,-4,21,22,22,22,22,]),'CPAREN':([4,22,24,25,28,29,31,32,33,34,40,41,44,46,47,48,49,50,],[5,-23,-12,-13,-16,-19,-24,-25,-26,-27,-21,-22,50,-14,-15,-17,-18,-20,]),'VAR':([5,],[8,]),'INT':([8,19,26,27,30,38,39,42,43,],[15,31,31,31,31,31,31,31,31,]),'DEC':([8,19,26,27,30,38,39,42,43,],[16,32,32,32,32,32,32,32,32,]),'STRING':([8,19,26,27,30,38,39,42,43,],[17,33,33,33,33,33,33,33,33,]),'BOOL':([8,19,26,27,30,38,39,42,43,],[18,34,34,34,34,34,34,34,34,]),'ASSIGNMENT':([12,],[19,]),'PLUS':([19,22,25,28,29,30,31,32,33,34,38,39,40,41,42,43,48,49,50,],[26,-23,38,-16,-19,26,-24,-25,-26,-27,26,26,-21,-22,26,26,-17,-18,-20,]),'MINUS':([19,22,25,28,29,30,31,32,33,34,38,39,40,41,42,43,48,49,50,],[27,-23,39,-16,-19,27,-24,-25,-26,-27,27,27,-21,-22,27,27,-17,-18,-20,]),'EOF':([20,21,22,23,24,25,28,29,31,32,33,34,40,41,45,46,47,48,49,50,],[35,-5,-23,37,-12,-13,-16,-19,-24,-25,-26,-27,-21,-22,-6,-14,-15,-17,-18,-20,]),'COMMA':([21,],[36,]),'MULTIPLY':([22,28,29,31,32,33,34,40,41,50,],[-23,42,-19,-24,-25,-26,-27,-21,-22,-20,]),'DIVIDE':([22,28,29,31,32,33,34,40,41,50,],[-23,43,-19,-24,-25,-26,-27,-21,-22,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'begin':([0,],[1,]),'bloque':([5,],[6,]),'declaracionVar':([5,],[7,]),'estatuto':([7,],[9,]),'asignacion':([7,],[10,]),'epsilon':([7,],[11,]),'vars':([8,],[13,]),'tipo':([8,],[14,]),'var':([14,36,],[20,45,]),'expresion':([19,30,],[23,44,]),'exp':([19,30,38,39,],[24,24,46,47,]),'termino':([19,30,38,39,42,43,],[25,25,25,25,48,49,]),'factor':([19,30,38,39,42,43,],[28,28,28,28,28,28,]),'varCTE':([19,26,27,30,38,39,42,43,],[29,40,41,29,29,29,29,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> begin","S'",1,None,None,None),
  ('begin -> BEGIN OPAREN ID CPAREN bloque','begin',5,'p_begin','syntax.py',5),
  ('bloque -> declaracionVar estatuto','bloque',2,'p_bloque','syntax.py',9),
  ('declaracionVar -> VAR vars','declaracionVar',2,'p_declaracionVar','syntax.py',13),
  ('vars -> tipo var EOF','vars',3,'p_vars','syntax.py',17),
  ('var -> ID','var',1,'p_var','syntax.py',21),
  ('var -> ID COMMA var','var',3,'p_var','syntax.py',22),
  ('tipo -> INT','tipo',1,'p_tipo','syntax.py',27),
  ('tipo -> DEC','tipo',1,'p_tipo','syntax.py',28),
  ('tipo -> STRING','tipo',1,'p_tipo','syntax.py',29),
  ('tipo -> BOOL','tipo',1,'p_tipo','syntax.py',30),
  ('asignacion -> ID ASSIGNMENT expresion EOF','asignacion',4,'p_asignacion','syntax.py',34),
  ('expresion -> exp','expresion',1,'p_expresion','syntax.py',38),
  ('exp -> termino','exp',1,'p_exp','syntax.py',42),
  ('exp -> termino PLUS exp','exp',3,'p_exp','syntax.py',43),
  ('exp -> termino MINUS exp','exp',3,'p_exp','syntax.py',44),
  ('termino -> factor','termino',1,'p_termino','syntax.py',48),
  ('termino -> factor MULTIPLY termino','termino',3,'p_termino','syntax.py',49),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','syntax.py',50),
  ('factor -> varCTE','factor',1,'p_factor','syntax.py',54),
  ('factor -> OPAREN expresion CPAREN','factor',3,'p_factor','syntax.py',55),
  ('factor -> PLUS varCTE','factor',2,'p_factor','syntax.py',56),
  ('factor -> MINUS varCTE','factor',2,'p_factor','syntax.py',57),
  ('varCTE -> ID','varCTE',1,'p_varCTE','syntax.py',61),
  ('varCTE -> INT','varCTE',1,'p_varCTE','syntax.py',62),
  ('varCTE -> DEC','varCTE',1,'p_varCTE','syntax.py',63),
  ('varCTE -> STRING','varCTE',1,'p_varCTE','syntax.py',64),
  ('varCTE -> BOOL','varCTE',1,'p_varCTE','syntax.py',65),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','syntax.py',69),
  ('estatuto -> epsilon','estatuto',1,'p_estatuto','syntax.py',70),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','syntax.py',74),
]
